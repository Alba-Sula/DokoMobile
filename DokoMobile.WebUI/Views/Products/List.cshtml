@model IEnumerable<DokoMobile.Domain.Entities.Product>

@{
    ViewBag.Title = "List";
}

<h2>List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YearOfProduction)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductCondition)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HasDiscount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Color)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brands.BrandName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Display)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RAM)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Processor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Batery)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OS)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Memory)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImgPath1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImgPath2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImgPath3)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImgPath4)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearOfProduction)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCondition)
            </td>
            <th>
                @Html.DisplayFor(model => item.HasDiscount)
            </th>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brands.BrandName)
            </td>
            <th>
                @Html.DisplayFor(model => item.Display)
            </th>
            <th>
                @Html.DisplayFor(model => item.RAM)
            </th>
            <th>
                @Html.DisplayFor(model => item.Processor)
            </th>
            <th>
                @Html.DisplayFor(model => item.Batery)
            </th>
            <th>
                @Html.DisplayFor(model => item.OS)
            </th>
            <th>
                @Html.DisplayFor(model => item.Memory)
            </th>
            <th>
                <img src=@item.ImgPath1 width="100" height="100" />
            </th>
            <th>
                <img src=@item.ImgPath2 width="100" height="100" />
            </th>
            <th>
                <img src=@item.ImgPath3 width="100" height="100" />
            </th>
            <th>
                <img src=@item.ImgPath4 width="100" height="100" />
            </th>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                <button id=@item.ProductId type="button" class="btn btn-primary btn-xs modal-confirm" data-toggle="modal" data-target="#deleteCategoryModal">
                    Delete
                </button>
            </td>
        </tr>
    }
</table>


<!-- Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" role="dialog" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCategoryModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this product?
            </div>
            <div class="modal-footer delete-crfm">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <form action="/Products/Delete/" method="post">
                    <input type="submit"
                           class="btn btn-default btn-xs confirm-btn"
                           value="Delete" />
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    let allButtons = document.querySelectorAll(".modal-confirm");
    for (let i = 0; i < allButtons.length; i++) {
        allButtons[i].addEventListener("click", function () {
            let buttonId = allButtons[i].getAttribute("id");
            let idBackDel = document.querySelector(".delete-crfm form");
            let idBackDelAction = idBackDel.getAttribute("action");
            idBackDel.setAttribute("action", idBackDelAction += buttonId);
        });
    }

</script>
